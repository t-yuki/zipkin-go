package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/t-yuki/zipkin-go/models"
)

// GetTraceTraceIDReader is a Reader for the GetTraceTraceID structure.
type GetTraceTraceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetTraceTraceIDReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTraceTraceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetTraceTraceIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTraceTraceIDOK creates a GetTraceTraceIDOK with default headers values
func NewGetTraceTraceIDOK() *GetTraceTraceIDOK {
	return &GetTraceTraceIDOK{}
}

/*GetTraceTraceIDOK handles this case with default header values.

OK
*/
type GetTraceTraceIDOK struct {
	Payload []models.Trace
}

func (o *GetTraceTraceIDOK) Error() string {
	return fmt.Sprintf("[GET /trace/{traceId}][%d] getTraceTraceIdOK  %+v", 200, o.Payload)
}

func (o *GetTraceTraceIDOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTraceTraceIDNotFound creates a GetTraceTraceIDNotFound with default headers values
func NewGetTraceTraceIDNotFound() *GetTraceTraceIDNotFound {
	return &GetTraceTraceIDNotFound{}
}

/*GetTraceTraceIDNotFound handles this case with default header values.

`traceId` not found
*/
type GetTraceTraceIDNotFound struct {
}

func (o *GetTraceTraceIDNotFound) Error() string {
	return fmt.Sprintf("[GET /trace/{traceId}][%d] getTraceTraceIdNotFound ", 404)
}

func (o *GetTraceTraceIDNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
